buildscript {
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.1.0"
    }
}

plugins {
    id 'com.palantir.docker' version '0.25.0'
//    id 'org.springframework.boot' version '2.7.13'
    id 'org.springframework.boot' version '2.5.15'//swagger 때문에 일부러 다운그레이드해서 테스트 (spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER <- )
    id 'java'
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.likipay.member'
version '1.0.1'

repositories {
    mavenCentral()
}

dependencies {

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'

    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:24.0.1'//what is this?

    implementation project(path: ':common')

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    //h2 사용을 위한 디펜던시
//    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
//    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
}

////그래들 과정에서 도커라이징 한다?
docker {
    println(tasks.bootJar.outputs.files)

    //image name
    name project.name + ":" + version

    //어떤 Dockerfile
//    dockerfile file('./Dockerfile')//상대경로 (도커파일이 같은 레벨에 있었다면)
    dockerfile file('../Dockerfile')//상대경로 (도커파일이 같은 레벨에 있었다면)

    //어떤 파일들을 Dockerfile 에 복사할 것인가
    files tasks.bootJar.outputs.files

    //Dockerfile 에 전달할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}


test {
    useJUnitPlatform()
}