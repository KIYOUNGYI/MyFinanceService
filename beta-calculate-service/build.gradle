buildscript {
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.1.0"
    }
}

plugins {
    id 'com.palantir.docker' version '0.35.0'
    id 'org.springframework.boot' version '2.5.15'
    id 'java'
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.liki.beta-calculate-service'
version '1.0.0'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

//    implementation project(path: ':common')
}

docker {
    println(tasks.bootJar.outputs.files)

    //image name
    name project.name + ":" + version

    //어떤 Dockerfile
//    dockerfile file('./Dockerfile')//상대경로 (도커파일이 같은 레벨에 있었다면)
    dockerfile file('../Dockerfile')//상대경로 (도커파일이 같은 레벨에 있었다면)

    //어떤 파일들을 Dockerfile 에 복사할 것인가
    files tasks.bootJar.outputs.files

    //Dockerfile 에 전달할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}

bootJar {
    archiveFileName = "${project.name}.jar"
}